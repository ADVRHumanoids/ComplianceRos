#!/usr/bin/env python

import roslib
roslib.load_manifest('custom_controller')
from custom_messages.msg import GroupControllerMsg
from custom_services.srv import updatePrint
import rospy
import os.path
import datetime

def callback(data):
	time = data.header.stamp.secs+data.header.stamp.nsecs*1e-9
	j = 0
	for i in data.controller:
		temp = [time, i.link_side_position, i.link_side_velocity, i.motor_side_position, i.motor_side_velocity, i.link_side_effort, i.motor_side_effort, i.desired_position]
  		file[j].write("\t".join(str(elem) for elem in temp) + "\n")
		j = j+1

if __name__ == '__main__':
	rospy.init_node('saveData')

	command_sub = rospy.Subscriber('debug', GroupControllerMsg, callback)


	rospy.wait_for_service('update_print')
	update_print = rospy.ServiceProxy('update_print', updatePrint) 

	names = update_print(0,"check")
		
	rate = rospy.Rate(1000.0)
	#check on parameter server the print list, and then take the names

	path = datetime.datetime.now().strftime('%a_%d_%B_%Y__%H_%M_%S')
	
	try:
		os.mkdir(path)
	except Exception, e:
		print e
    
	filename = [item.split("\n")[0]+'txt' for item in names.message.split("joint name: ")[1:]]

	file = [open(os.path.join(path, i),'w') for i in filename]
	
	while not rospy.is_shutdown():
		rospy.spin()				
		rate.sleep()
		
	for f in file:
		f.close()
